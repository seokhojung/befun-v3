  🔄 다음 스토리 진행 절차

  Step 1: 스토리 생성 (SM 에이전트)

  # 새로운 채팅 세션 시작
  @sm
  그 다음 다음 명령어 실행:
  *create (샤딩된 핵심문서를 보고 처음 스토리를 작성할 때)
  *draft (다음 스토리를 작성 할 때 -> 지난 스토리 문서를 보고 진행에 맞게 다음 스토리를 작성함)

  SM 에이전트가 수행하는 작업:
  - 샤드된 PRD 문서에서 다음 스토리 생성
  - Epic 1의 순서에 따라 자동으로 다음 스토리 선택
  - 스dltb 토리 상태: "Draft" 로 생성
  - 파일 위치: docs/stories/[epic].[story].*.md

  Step 2: 스토리 검토 

  스토리 검증을 원한다면:

  # 새로운 채팅에서 또는 계속해서
  @po   
  명령어
  *validate-story-draft {스토리 문서 이름}
  상태 - approved 로 변경


스토리 검증 no go 상태시 

*correct-course 명령 실행
다음 경우에만 *correct-course 재실행:
새로운 근본적 충돌 발견
Sprint Change Proposal이 부적절함
프로젝트 방향성 재검토 필요

스프린트 체인지 프로포셜 승인 후 
문서 다시 재검증 

승인 후 다음 명령어들을 순서대로 실행:
validate-story-draft docs/stories/2.2.real-time-pricing-system.md - 수정된 스토리 검증

no go 에서 go 상태가 되면

*doc-out 
- 최종 승인된 문서 출력





  Step 3: 개발 구현 (Dev 에이전트)

  # 새로운 채팅 세션 시작
  @dev

  Dev 에이전트가 수행하는 작업:
  - 승인된 스토리 구현
  - 모든 변경사항을 File List에 업데이트
  - 완료 시 스토리 상태: **"Review"**로 변경
*develop-story - 스토리 작업을 순차적으로 구현하고 테스트

  Step 4: QA 검토 (선택사항)

  # 새로운 채팅 세션 시작
  
@qa
  *review [스토리파일명]

  QA 에이전트가 수행하는 작업:
  - 구현 검토 및 소규모 이슈 직접 수정
  - 남은 항목 체크리스트 제공
  - 스토리 상태: "Review → Done" 또는 Review 유지


qa 수정사항 있을시 

*dev -> *review-qa








  워크플로우 Line 141-145:
  - step: repeat_development_cycle
    action: continue_for_all_stories
    notes: |
      Repeat story cycle (SM → Dev → QA) for all epic stories        
      Continue until all stories in PRD are complete

  반복 사이클: SM → Dev → QA → SM → Dev → QA...






